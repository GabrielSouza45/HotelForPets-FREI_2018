-- MySQL Script generated by MySQL Workbench
-- Fri Oct  5 16:50:10 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema TCC
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema TCC
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `TCC` ;
USE `TCC` ;

-- -----------------------------------------------------
-- Table `TCC`.`tb_Usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TCC`.`tb_Usuario` ;

CREATE TABLE IF NOT EXISTS `TCC`.`tb_Usuario` (
  `id_Usuario` INT NOT NULL AUTO_INCREMENT,
  `nm_Usuario` VARCHAR(45) NOT NULL,
  `ds_CPF` VARCHAR(15) NOT NULL,
  `ds_Telefone` VARCHAR(45) NOT NULL,
  `ds_Celular` VARCHAR(45) NULL DEFAULT NULL,
  `ds_email_usuario` VARCHAR(45) NOT NULL,
  `ds_Senha_usuario` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`id_Usuario`));


-- -----------------------------------------------------
-- Table `TCC`.`tb_animal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TCC`.`tb_animal` ;

CREATE TABLE IF NOT EXISTS `TCC`.`tb_animal` (
  `id_animal` INT NOT NULL AUTO_INCREMENT,
  `ds_nome_animal` VARCHAR(45) NOT NULL,
  `ds_especie` VARCHAR(45) NOT NULL,
  `ds_pelagem` VARCHAR(45) NOT NULL,
  `ds_porte` VARCHAR(45) NOT NULL,
  `ds_raca` VARCHAR(45) NOT NULL,
  `ds_cor` VARCHAR(45) NOT NULL,
  `ds_castracao` TINYINT NOT NULL,
  `ds_carteira_vacinacao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_animal`));


-- -----------------------------------------------------
-- Table `TCC`.`tb_funcionario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TCC`.`tb_funcionario` ;

CREATE TABLE IF NOT EXISTS `TCC`.`tb_funcionario` (
  `id_funcionario` INT NOT NULL AUTO_INCREMENT,
  `nm_nome` VARCHAR(45) NOT NULL,
  `ds_cpf` VARCHAR(15) NOT NULL,
  `ds_cargo` VARCHAR(45) NOT NULL,
  `ds_senha_funcionario` VARCHAR(45) NOT NULL,
  `ds_data_de_nascimento` DATE NOT NULL,
  `ds_telefone` VARCHAR(45) NOT NULL,
  `ds_email_funcionario` VARCHAR(45) NOT NULL,
  `ds_rua` VARCHAR(65) NOT NULL,
  `ds_bairro` VARCHAR(45) NOT NULL,
  `ds_cep` INT NOT NULL,
  `nr_numero` VARCHAR(7) NOT NULL,
  `ds_cidade` VARCHAR(45) NOT NULL,
  `ds_estado` VARCHAR(3) NOT NULL,
  `bt_adm` TINYINT NULL,
  `bt_funcionario` TINYINT NULL,
  UNIQUE INDEX (`ds_email_funcionario` ASC),
  PRIMARY KEY (`id_funcionario`));


-- -----------------------------------------------------
-- Table `TCC`.`tb_cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TCC`.`tb_cliente` ;

CREATE TABLE IF NOT EXISTS `TCC`.`tb_cliente` (
  `id_cliente` INT NOT NULL AUTO_INCREMENT,
  `nm_nome` VARCHAR(45) NOT NULL,
  `ds_cpf` INT NOT NULL,
  `ds_bairro` VARCHAR(50) NOT NULL,
  `ds_cep` INT NOT NULL,
  `ds_rua` VARCHAR(65) NOT NULL,
  `ds_telefone` VARCHAR(45) NOT NULL,
  `id_animal` INT NOT NULL,
  `id_funcionario` INT NOT NULL,
  `ds_email_cliente` VARCHAR(45) NOT NULL,
  `ds_senha_cliente` VARCHAR(45) NOT NULL,
  UNIQUE INDEX (`ds_cpf` ASC),
  UNIQUE INDEX (`ds_email_cliente` ASC),
  PRIMARY KEY (`id_cliente`),
  INDEX `tb_cliente_fk0` (`id_animal` ASC),
  INDEX `tb_cliente_fk1` (`id_funcionario` ASC),
  CONSTRAINT `tb_cliente_fk0`
    FOREIGN KEY (`id_animal`)
    REFERENCES `TCC`.`tb_animal` (`id_animal`),
  CONSTRAINT `tb_cliente_fk1`
    FOREIGN KEY (`id_funcionario`)
    REFERENCES `TCC`.`tb_funcionario` (`id_funcionario`));


-- -----------------------------------------------------
-- Table `TCC`.`tb_fornecedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TCC`.`tb_fornecedor` ;

CREATE TABLE IF NOT EXISTS `TCC`.`tb_fornecedor` (
  `id_fornecedor` INT NOT NULL AUTO_INCREMENT,
  `nm_nome` VARCHAR(45) NOT NULL,
  `ds_telefone` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_fornecedor`));


-- -----------------------------------------------------
-- Table `TCC`.`tb_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TCC`.`tb_produto` ;

CREATE TABLE IF NOT EXISTS `TCC`.`tb_produto` (
  `id_produto` INT NOT NULL AUTO_INCREMENT,
  `nm_produto` VARCHAR(45) NOT NULL,
  `vl_preco` DECIMAL NOT NULL,
  `id_fornecedor` INT NOT NULL,
  PRIMARY KEY (`id_produto`),
  INDEX `tb_produto_fk0` (`id_fornecedor` ASC),
  CONSTRAINT `tb_produto_fk0`
    FOREIGN KEY (`id_fornecedor`)
    REFERENCES `TCC`.`tb_fornecedor` (`id_fornecedor`));


-- -----------------------------------------------------
-- Table `TCC`.`tb_pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TCC`.`tb_pedido` ;

CREATE TABLE IF NOT EXISTS `TCC`.`tb_pedido` (
  `id_pedido` INT NOT NULL AUTO_INCREMENT,
  `id_cliente` INT NOT NULL,
  `dt_venda` DATE NOT NULL,
  PRIMARY KEY (`id_pedido`),
  INDEX `tb_pedido_fk0` (`id_cliente` ASC),
  CONSTRAINT `tb_pedido_fk0`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `TCC`.`tb_cliente` (`id_cliente`));


-- -----------------------------------------------------
-- Table `TCC`.`tb_pedido_item`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TCC`.`tb_pedido_item` ;

CREATE TABLE IF NOT EXISTS `TCC`.`tb_pedido_item` (
  `id_pedido_item` INT NOT NULL AUTO_INCREMENT,
  `id_pedido` INT NOT NULL,
  `id_produto` INT NOT NULL,
  PRIMARY KEY (`id_pedido_item`),
  INDEX `tb_pedido_item_fk0` (`id_pedido` ASC),
  INDEX `tb_pedido_item_fk1` (`id_produto` ASC),
  CONSTRAINT `tb_pedido_item_fk0`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `TCC`.`tb_pedido` (`id_pedido`),
  CONSTRAINT `tb_pedido_item_fk1`
    FOREIGN KEY (`id_produto`)
    REFERENCES `TCC`.`tb_produto` (`id_produto`));


-- -----------------------------------------------------
-- Table `TCC`.`tb_folha_de_pagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TCC`.`tb_folha_de_pagamento` ;

CREATE TABLE IF NOT EXISTS `TCC`.`tb_folha_de_pagamento` (
  `id_folha_de_pagamento` INT NOT NULL AUTO_INCREMENT,
  `dt_emissao_folha` DATE NOT NULL,
  `ds_salario` DECIMAL NOT NULL,
  `ds_horas_extras` VARCHAR(10) NOT NULL,
  `ds_atrasos` VARCHAR(3) NOT NULL,
  `ds_faltas` VARCHAR(3) NOT NULL,
  `vl_inss` DECIMAL NOT NULL,
  `vl_imposto_de_renda` DECIMAL NOT NULL,
  `ds_aliquota` DECIMAL NULL DEFAULT NULL,
  `vl_fgts` DECIMAL NOT NULL,
  `vl_vale_transporte` DECIMAL NOT NULL,
  `vl_salario_liquido` DECIMAL NOT NULL,
  `id_Funcionario` INT NOT NULL,
  PRIMARY KEY (`id_folha_de_pagamento`),
  INDEX `tb_folha_de_pagamento_fk0` (`id_Funcionario` ASC),
  CONSTRAINT `tb_folha_de_pagamento_fk0`
    FOREIGN KEY (`id_Funcionario`)
    REFERENCES `TCC`.`tb_funcionario` (`id_funcionario`));


-- -----------------------------------------------------
-- Table `TCC`.`tb_Folha_Funcionario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TCC`.`tb_Folha_Funcionario` ;

CREATE TABLE IF NOT EXISTS `TCC`.`tb_Folha_Funcionario` (
  `Id_Folha` INT NOT NULL AUTO_INCREMENT,
  `pagm_id_folha_de_pagamento` INT NOT NULL,
  `func_id_funcionario` INT NOT NULL,
  PRIMARY KEY (`Id_Folha`),
  INDEX `tb_Folha_Funcionario_fk0` (`pagm_id_folha_de_pagamento` ASC),
  INDEX `tb_Folha_Funcionario_fk1` (`func_id_funcionario` ASC),
  CONSTRAINT `tb_Folha_Funcionario_fk0`
    FOREIGN KEY (`pagm_id_folha_de_pagamento`)
    REFERENCES `TCC`.`tb_folha_de_pagamento` (`id_folha_de_pagamento`),
  CONSTRAINT `tb_Folha_Funcionario_fk1`
    FOREIGN KEY (`func_id_funcionario`)
    REFERENCES `TCC`.`tb_funcionario` (`id_funcionario`));


-- -----------------------------------------------------
-- Table `TCC`.`tb_estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TCC`.`tb_estoque` ;

CREATE TABLE IF NOT EXISTS `TCC`.`tb_estoque` (
  `id_estoque` INT NOT NULL AUTO_INCREMENT,
  `qt_produto` VARCHAR(10) NOT NULL,
  `vl_custo_atual` DECIMAL NOT NULL,
  `vl_custo_total` DECIMAL NOT NULL,
  `Produto_id_produto` INT NOT NULL,
  PRIMARY KEY (`id_estoque`),
  INDEX `tb_estoque_fk0` (`Produto_id_produto` ASC),
  CONSTRAINT `tb_estoque_fk0`
    FOREIGN KEY (`Produto_id_produto`)
    REFERENCES `TCC`.`tb_produto` (`id_produto`));


-- -----------------------------------------------------
-- Table `TCC`.`tb_fluxo_de_caixa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TCC`.`tb_fluxo_de_caixa` ;

CREATE TABLE IF NOT EXISTS `TCC`.`tb_fluxo_de_caixa` (
  `id_fluxo_de_caixa` INT NOT NULL AUTO_INCREMENT,
  `ds_descricao` INT NOT NULL,
  `ds_valor` DECIMAL NOT NULL,
  `ds_saldo_atual` DECIMAL NOT NULL,
  `vl_saldo_dia` DECIMAL NOT NULL,
  `vl_subtotal` DECIMAL NOT NULL,
  `id_pedido` INT NOT NULL,
  PRIMARY KEY (`id_fluxo_de_caixa`),
  INDEX `tb_fluxo_de_caixa_fk0` (`id_pedido` ASC),
  CONSTRAINT `tb_fluxo_de_caixa_fk0`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `TCC`.`tb_pedido` (`id_pedido`));


-- -----------------------------------------------------
-- Table `TCC`.`tb_login`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TCC`.`tb_login` ;

CREATE TABLE IF NOT EXISTS `TCC`.`tb_login` (
  `id_login` INT NOT NULL AUTO_INCREMENT,
  `fucionario_id_funcionario` INT NOT NULL,
  `cliente_id_cliente` INT NOT NULL,
  PRIMARY KEY (`id_login`),
  INDEX `tb_login_fk0` (`fucionario_id_funcionario` ASC),
  INDEX `tb_login_fk1` (`cliente_id_cliente` ASC),
  CONSTRAINT `tb_login_fk0`
    FOREIGN KEY (`fucionario_id_funcionario`)
    REFERENCES `TCC`.`tb_funcionario` (`id_funcionario`),
  CONSTRAINT `tb_login_fk1`
    FOREIGN KEY (`cliente_id_cliente`)
    REFERENCES `TCC`.`tb_cliente` (`id_cliente`));

USE `TCC` ;

-- -----------------------------------------------------
-- Placeholder table for view `TCC`.`VW_CONSULTAR_LOGIN`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TCC`.`VW_CONSULTAR_LOGIN` (`id_login` INT, `id_cliente` INT, `ds_email_cliente` INT, `ds_senha_cliente` INT, `id_funcionario` INT, `ds_email_funcionario` INT, `ds_senha_funcionario` INT, `id_administrador` INT, `ds_email_administrador` INT, `ds_senha_administrador` INT);

-- -----------------------------------------------------
-- Placeholder table for view `TCC`.`VW_CONSULTAR_FUNCIONARIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TCC`.`VW_CONSULTAR_FUNCIONARIO` (`Id_Folha` INT, `id_funcionario` INT, `nm_nome` INT, `ds_cargo` INT, `ds_telefone` INT, `ds_email_funcionario` INT, `id_folha_de_pagamento` INT, `dt_emissao_folha` INT, `vl_salario_liquido` INT);

-- -----------------------------------------------------
-- View `TCC`.`VW_CONSULTAR_LOGIN`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `TCC`.`VW_CONSULTAR_LOGIN` ;
DROP TABLE IF EXISTS `TCC`.`VW_CONSULTAR_LOGIN`;
USE `TCC`;
CREATE  OR REPLACE VIEW VW_CONSULTAR_LOGIN AS
	select tb_login.id_login,
		   tb_cliente.id_cliente,
		   tb_cliente.ds_email_cliente,
		   tb_cliente.ds_senha_cliente,
           tb_funcionario.id_funcionario,
		   tb_funcionario.ds_email_funcionario,
		   tb_funcionario.ds_senha_funcionario,
           tb_administrador.id_administrador,
		   tb_administrador.ds_email_administrador,
		   tb_administrador.ds_senha_administrador
	from tb_login
    join tb_cliente
      on tb_login.cliente_id_cliente
	join tb_funcionario
      on tb_login.fucionario_id_funcionario
    join tb_administrador
      on tb_login.administrador_id_administrador;

-- -----------------------------------------------------
-- View `TCC`.`VW_CONSULTAR_FUNCIONARIO`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `TCC`.`VW_CONSULTAR_FUNCIONARIO` ;
DROP TABLE IF EXISTS `TCC`.`VW_CONSULTAR_FUNCIONARIO`;
USE `TCC`;
CREATE  OR REPLACE VIEW VW_CONSULTAR_FUNCIONARIO AS
	select 	tb_Folha_Funcionario.Id_Folha,
			tb_funcionario.id_funcionario,
            tb_funcionario.nm_nome,
            tb_funcionario.ds_cargo,
            tb_funcionario.ds_telefone,
            tb_funcionario.ds_email_funcionario,
            tb_folha_de_pagamento.id_folha_de_pagamento,
            tb_folha_de_pagamento.dt_emissao_folha,
            tb_folha_de_pagamento.vl_salario_liquido
	from tb_Folha_Funcionario
    join tb_funcionario
    on	tb_Folha_Funcionario.func_id_funcionario
    join tb_folha_de_pagamento
    on	tb_Folha_Funcionario.pagm_id_folha_de_pagamento;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
